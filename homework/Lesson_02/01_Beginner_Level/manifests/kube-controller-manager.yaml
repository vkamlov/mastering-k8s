apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    component: kube-controller-manager
    tier: control-plane
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  containers:
  - name: kube-controller-manager
    image: registry.k8s.io/kube-controller-manager:v1.34.1
    imagePullPolicy: IfNotPresent
    command:
    - kube-controller-manager
    args:
    - --bind-address=0.0.0.0
    - --kubeconfig=/var/lib/kubelet/kubeconfig
    - --leader-elect=false
    - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
    - --use-service-account-credentials=true
    - --allocate-node-cidrs=false
    - --controllers=*,bootstrapsigner,tokencleaner
    - --v=2
    env:
    - name: HOST_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    volumeMounts:
    - name: kubeconfig
      mountPath: /var/lib/kubelet/kubeconfig
      readOnly: true
    - name: k8s-certs
      mountPath: /etc/kubernetes/pki
      readOnly: true
    - name: ca-certs
      mountPath: /etc/ssl/certs
      readOnly: true
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 512Mi
    securityContext:
      privileged: true
      runAsUser: 0
      runAsGroup: 0
      runAsNonRoot: false
  volumes:
  - name: kubeconfig
    hostPath:
      path: /var/lib/kubelet/kubeconfig
      type: FileOrCreate
  - name: k8s-certs
    hostPath:
      path: /etc/kubernetes/pki
      type: DirectoryOrCreate
  - name: ca-certs
    hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
